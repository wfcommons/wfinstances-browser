FROM arm64v8/ubuntu

RUN apt-get update
RUN apt-get install -y python3
RUN apt-get install -y python3-pip

RUN apt-get install -y libasio-dev
RUN apt-get install -y zip wget
RUN apt-get install -y cmake

RUN wget --no-check-certificate https://framagit.org/simgrid/simgrid/-/archive/v3.36/simgrid-v3.36.tar.gz && tar -xf simgrid-v3.36.tar.gz && cd simgrid-v3.36 && cmake . && make && make install && cd .. && rm -rf simgrid-v3.36*

RUN wget https://github.com/simgrid/file-system-module/archive/refs/tags/v0.2.tar.gz && tar -xf v0.2.tar.gz && cd file-system-module-0.2 && mkdir build && cd build && cmake .. && make  && make install && cd ../.. && rm -rf v0.2.tar.gz file-system-module-v*

RUN apt-get -y install nlohmann-json3-dev

RUN apt-get -y install libasio-dev

RUN pip install jsonref --break-system-packages

RUN apt-get install -y libboost-program-options-dev


RUN wget https://github.com/wrench-project/wrench/archive/refs/tags/v2.5.tar.gz && tar -xzf v2.5.tar.gz && cd wrench-2.5 && mkdir build && cd build && cmake .. && make -j12 wrench-daemon examples && make install && cd ../.. && /bin/rm -rf wrench-2.5

COPY requirements.txt .

RUN pip install -r requirements.txt --break-system-packages

RUN apt-get update && apt-get install -y curl

RUN apt-get install -y cron

RUN echo '#!/bin/sh\ncurl -X PUT http://localhost:8081/metrics/private/github/wfcommons/WfInstances' > /usr/local/bin/workflowInjection.sh

RUN chmod +x /usr/local/bin/workflowInjection.sh

ARG WFINSTANCES_CRAWL_PERIOD_IN_DAYS

RUN  echo "0 0 */${WFINSTANCES_CRAWL_PERIOD_IN_DAYS} * *  /usr/local/bin/workflowInjection.sh" > /etc/cron.d/run-curl-job

RUN chmod 0644 /etc/cron.d/run-curl-job

RUN crontab /etc/cron.d/run-curl-job

# Install WRENCH API v0.4
RUN apt-get -y install zip
RUN python3 -m pip install build --break-system-packages
RUN wget https://github.com/wrench-project/wrench-python-api/archive/refs/tags/v0.4.zip; unzip v0.4.zip; cd wrench-python-api-0.4; python3 -m build; python3 -m pip install ./dist/wrench-*.whl --break-system-packages



COPY . .

#CMD cron && uvicorn src.main:app --host 0.0.0.0 --port 8081
CMD cron && bash ./run_uvicorn_and_wrench_daemon.bash
